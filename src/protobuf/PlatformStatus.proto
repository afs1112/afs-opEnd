syntax = "proto2";
import "PublicStruct.proto";

package PlatformStatus;

///平台基础数据
message PlatformBase
{
	optional	string name = 1;
	optional	string type = 2;
	optional	string side = 3;
	optional	string group = 4;
	optional	bool broken  = 5;	
	optional	PublicStruct.GeoCoordinate location = 6;
	optional double roll                 = 7;    //横滚
	optional double pitch                = 8;    //俯仰
	optional double yaw                  = 9;    //偏航
	optional double speed                = 10;    //速度
}


//推进器
message Mover
{
	optional string type = 1;
	repeated PublicStruct.WayPoint route = 2;
}

enum SlewMode
{
	cSLEW_FIXED = 0;
	cSLEW_AZ = 1;
	cSLEW_EL = 2; 
	cSLEW_AZ_EL = 3  ;
}

message PartParam
{
	optional string name = 1;
	optional string type = 2;
	optional SlewMode slewMode = 3;
	optional double minAzSlew = 4;  //方位角
	optional double maxAzSlew = 5;
	optional double minElSlew = 6;	//俯仰角
	optional double maxElSlew = 7;
	optional double currentAz = 8;  //当前方位角
	optional double currentEl = 9;  //当前俯仰角
	optional bool isTurnedOn = 10;  //开关标识
}

//通信
message Comm
{
	optional PartParam base = 1;
	optional string network = 2;
}

//传感器
message Sensor
{
	optional PartParam base = 1;
	optional string mode = 2;
	optional int32 laser_code = 3;
}
//武器
message Weapon
{
	optional PartParam base = 1;
	optional int32 quantity = 2;	
}

message Track 
{
	optional string sensorName = 1;
	optional string targetName = 2;
	optional string targetType = 3;
}

message TargetLoad
{
	optional string targetName = 1;       		//
   	optional double distance = 2;				//距离
	optional double bearing = 3;				//方位
	optional double elevationDifference = 4;	//高差	
	optional double azimuth = 5;				//方位角
	optional double pitch = 6;					//高低角
}

//上报的每个平台所有数据
message Platform
{
	optional PlatformBase base = 1;	
	optional double updateTime = 2;  // fix typo
	optional Mover mover = 3;
	repeated Comm comms = 4;
	repeated Sensor sensors = 5;
	repeated Weapon weapons = 6;
	repeated Track tracks = 7;
	optional TargetLoad targetLoad = 8;
}
//环境参数
message Environment
{
	optional double windSpeed = 1;
	optional double windDirection  = 2;
 	optional double cloudLowerAlt = 3;
 	optional double cloudUpperAlt = 4;
	optional double rainUpperAlt = 5;
	optional double rainRate = 6;
	optional double temperature = 7;
}
//所有平台
message Platforms
{
	repeated Platform platform =1;
	optional Environment evironment = 2;
}	

message PlatformDeleteParam
{
	optional string name = 1;
	optional double updateTime = 2; 
}